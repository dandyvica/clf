# define Tera/Jinja2 variables
# {% set options = "script,noprotocol,noperfdata,logfilemissing=warning,noallyoucaneat,capturegroups" %}
# {% set logfile = "/tech/monitoring_mgr/var/netlog/infrastructure.log" %}
# {% set script = "/tech/monitoring/centreon-engine/libexec/action_on_logfile.sh" %}
# {% set roottag = "SYSLOG_TO_NGS_INFRASTRUCTURE_NTP-TLS_NSCA-SV_" %}
# {% set pathlist = "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin" %}

global:
  path: "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
  #snapshot_file: /tmp/snapshot.json
  snapshot_retention: 60
  user_vars:
    CLF_firstname: Al
    CLF_lastname: Pacino
    CLF_city: "Los Angeles"
    CLF_profession: actor
  prescript:
    command: ['../scripts/echodomain.py']
    timeout: 1000
  postcript:
    command: ['../scripts/kill.py']

searches:
  - logfile:
      path: /var/log/syslog
      format: plain
    tags:
      - name: syslog_nokernel
        process: true
        options: "runcallback,fastforward"
        callback:
          script: "./syslog.py"
          args: 
            - "arg1"
            - "arg2"
            - "arg3"
        patterns:
          critical:
            regexes: ['(\w+)[(\d+)]']
            exceptions: ["kernel:"]

      - name: syslog_kernel
        process: true
        options: "runcallback"
        callback:
          script: "./syslog.py"
          args: ["arg1", "arg2", "arg3"]
        patterns:
          warning:
            regexes: ["kernel: (.*)"]

  - logfile:
      path: /var/log/kern.log
      format: plain
    tags:
      - name: kern_nokernel
        process: true
        options: "runcallback"
        callback: { domain: "/tmp/clf.sock", args: ["arg1", "arg2", "arg3"] }
        patterns:
          warning: { regexes: ["kernel: (.*)$"], exceptions: ["NVidia"] }

      - name: kern_kernel
        process: true
        options: "runcallback,runlimit=10"
        callback: { script: "./syslog.py", args: ["arg1", "arg2", "arg3"] }
        patterns:
          warning: { regexes: ["kernel: (.*)"] }

  - logfile:
      list: ['/usr/bin/find', '/var/log/apt', '-name', '*.log']
      format: plain
    tags:
      - name: apt
        process: true
        options: "runcallback"
        callback: { domain: "/tmp/clf.sock", args: ["arg1", "arg2", "arg3"] }
        patterns:
          warning: { regexes: ["Deleting"] }

  - logfile:
      path: /tmp/foo
      format: plain
      logfilemissing: critical
    tags:
      - name: apt
        process: true
        options: "runcallback"
        callback: { domain: "/tmp/clf.sock", args: ["arg1", "arg2", "arg3"] }
        patterns:
          warning: { regexes: ["Deleting"] }

  - logfile:
      path: /tmp/foo2
      format: plain
      logfilemissing: critical
    tags:
      - name: apt
        process: true
        options: "runcallback"
        callback: { domain: "/tmp/clf.sock", args: ["arg1", "arg2", "arg3"] }
        patterns:
          warning: { regexes: ["Deleting"] }
